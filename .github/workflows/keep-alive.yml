name: Keep Service Alive

on:
  schedule:
    # Ch·∫°y m·ªói 5 ph√∫t (*/5 * * * *)
    # Ho·∫∑c m·ªói 10 ph√∫t (*/10 * * * *)
    # Render free tier spin down sau 15 ph√∫t, n√™n ping m·ªói 5-10 ph√∫t l√† an to√†n
    - cron: "*/5 * * * *"

  # Cho ph√©p ch·∫°y workflow th·ªß c√¥ng t·ª´ GitHub Actions tab
  workflow_dispatch:

jobs:
  ping:
    name: Ping Render Service
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Ping /ping endpoint
        run: |
          echo "üîî Pinging service to keep it alive..."
          echo "Time: $(date)"

          # Thay YOUR_SERVICE_URL b·∫±ng URL th·ª±c c·ªßa b·∫°n
          # V√≠ d·ª•: https://rcm-recipe-api.onrender.com
          SERVICE_URL="${{ secrets.RENDER_SERVICE_URL || 'https://your-service.onrender.com' }}"

          # Ping endpoint
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" "$SERVICE_URL/ping")

          echo "Response Code: $RESPONSE"

          # Ki·ªÉm tra response code
          if [ "$RESPONSE" -eq 200 ]; then
            echo "‚úÖ Ping successful!"
          else
            echo "‚ùå Ping failed with code: $RESPONSE"
            exit 1
          fi

      - name: Check health status
        run: |
          echo "üè• Checking service health..."

          SERVICE_URL="${{ secrets.RENDER_SERVICE_URL || 'https://your-service.onrender.com' }}"

          # Get health status
          curl -s "$SERVICE_URL/health" | jq '.'

          echo "‚úÖ Health check complete!"
        continue-on-error: true

      - name: Log ping activity
        run: |
          echo "üìä Ping Activity Summary"
          echo "------------------------"
          echo "Timestamp: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          echo "Service: ${{ secrets.RENDER_SERVICE_URL || 'Not configured' }}"
          echo "Workflow: ${{ github.workflow }}"
          echo "Run Number: ${{ github.run_number }}"
          echo "------------------------"
